ARM GAS  /tmp/ccmuyN4x.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB766:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccmuyN4x.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c ****  
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  61:Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  64:Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi1;
  65:Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi2;
  66:Core/Src/stm32f4xx_it.c **** extern SPI_HandleTypeDef hspi4;
  67:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  72:Core/Src/stm32f4xx_it.c **** 
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  75:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f4xx_it.c **** /**
  77:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Core/Src/stm32f4xx_it.c ****   */
  79:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  80:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 80 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/ccmuyN4x.s 			page 3


  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  33              		.loc 1 87 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE766:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB767:
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** /**
  90:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
  48              		.loc 1 93 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE767:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB768:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   while (1)
  98:Core/Src/stm32f4xx_it.c ****   {
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   }
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** /**
 105:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32f4xx_it.c ****   */
 107:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccmuyN4x.s 			page 4


  69              		.loc 1 108 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE768:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB769:
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   while (1)
 113:Core/Src/stm32f4xx_it.c ****   {
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****   }
 117:Core/Src/stm32f4xx_it.c **** }
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c **** /**
 120:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Core/Src/stm32f4xx_it.c ****   */
 122:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32f4xx_it.c **** {
  90              		.loc 1 123 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE769:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB770:
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  /tmp/ccmuyN4x.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****   {
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****   }
 132:Core/Src/stm32f4xx_it.c **** }
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c **** /**
 135:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32f4xx_it.c ****   */
 137:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32f4xx_it.c **** {
 111              		.loc 1 138 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE770:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SVC_Handler:
 131              	.LFB771:
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   while (1)
 143:Core/Src/stm32f4xx_it.c ****   {
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****   }
 147:Core/Src/stm32f4xx_it.c **** }
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c **** /**
 150:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 151:Core/Src/stm32f4xx_it.c ****   */
 152:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 153:Core/Src/stm32f4xx_it.c **** {
 132              		.loc 1 153 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccmuyN4x.s 			page 6


 137              		.loc 1 160 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE771:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB772:
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c **** /**
 163:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 164:Core/Src/stm32f4xx_it.c ****   */
 165:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 166:Core/Src/stm32f4xx_it.c **** {
 152              		.loc 1 166 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 173:Core/Src/stm32f4xx_it.c **** }
 157              		.loc 1 173 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE772:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB773:
 174:Core/Src/stm32f4xx_it.c **** 
 175:Core/Src/stm32f4xx_it.c **** /**
 176:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 177:Core/Src/stm32f4xx_it.c ****   */
 178:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 179:Core/Src/stm32f4xx_it.c **** {
 172              		.loc 1 179 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 181:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccmuyN4x.s 			page 7


 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 186:Core/Src/stm32f4xx_it.c **** }
 177              		.loc 1 186 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE773:
 182              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 183              		.align	1
 184              		.global	DMA1_Stream0_IRQHandler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	DMA1_Stream0_IRQHandler:
 191              	.LFB774:
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 189:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 190:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 191:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 192:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 193:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c **** /**
 196:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 197:Core/Src/stm32f4xx_it.c ****   */
 198:Core/Src/stm32f4xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 199:Core/Src/stm32f4xx_it.c **** {
 192              		.loc 1 199 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 201              		.loc 1 203 0
 202 0002 0248     		ldr	r0, .L15
 203 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 204              	.LVL0:
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** }
 205              		.loc 1 207 0
 206 0008 08BD     		pop	{r3, pc}
 207              	.L16:
 208 000a 00BF     		.align	2
 209              	.L15:
ARM GAS  /tmp/ccmuyN4x.s 			page 8


 210 000c 00000000 		.word	hdma_i2c1_rx
 211              		.cfi_endproc
 212              	.LFE774:
 214              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 215              		.align	1
 216              		.global	DMA1_Stream6_IRQHandler
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	DMA1_Stream6_IRQHandler:
 223              	.LFB775:
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c **** /**
 210:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 211:Core/Src/stm32f4xx_it.c ****   */
 212:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 213:Core/Src/stm32f4xx_it.c **** {
 224              		.loc 1 213 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI1:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 233              		.loc 1 217 0
 234 0002 0248     		ldr	r0, .L19
 235 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 236              	.LVL1:
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** }
 237              		.loc 1 221 0
 238 0008 08BD     		pop	{r3, pc}
 239              	.L20:
 240 000a 00BF     		.align	2
 241              	.L19:
 242 000c 00000000 		.word	hdma_i2c1_tx
 243              		.cfi_endproc
 244              	.LFE775:
 246              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	EXTI9_5_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	EXTI9_5_IRQHandler:
 255              	.LFB776:
 222:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccmuyN4x.s 			page 9


 223:Core/Src/stm32f4xx_it.c **** /**
 224:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 225:Core/Src/stm32f4xx_it.c ****   */
 226:Core/Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 227:Core/Src/stm32f4xx_it.c **** {
 256              		.loc 1 227 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 265              		.loc 1 231 0
 266 0002 4FF48070 		mov	r0, #256
 267 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 268              	.LVL2:
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** }
 269              		.loc 1 235 0
 270 000a 08BD     		pop	{r3, pc}
 271              		.cfi_endproc
 272              	.LFE776:
 274              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	TIM2_IRQHandler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	TIM2_IRQHandler:
 283              	.LFB777:
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c **** /**
 238:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 239:Core/Src/stm32f4xx_it.c ****   */
 240:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 241:Core/Src/stm32f4xx_it.c **** {
 284              		.loc 1 241 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
ARM GAS  /tmp/ccmuyN4x.s 			page 10


 245:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 293              		.loc 1 245 0
 294 0002 0248     		ldr	r0, .L25
 295 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 296              	.LVL3:
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** }
 297              		.loc 1 249 0
 298 0008 08BD     		pop	{r3, pc}
 299              	.L26:
 300 000a 00BF     		.align	2
 301              	.L25:
 302 000c 00000000 		.word	htim2
 303              		.cfi_endproc
 304              	.LFE777:
 306              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	I2C1_EV_IRQHandler
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	I2C1_EV_IRQHandler:
 315              	.LFB778:
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c **** /**
 252:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 253:Core/Src/stm32f4xx_it.c ****   */
 254:Core/Src/stm32f4xx_it.c **** void I2C1_EV_IRQHandler(void)
 255:Core/Src/stm32f4xx_it.c **** {
 316              		.loc 1 255 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI4:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 259:Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 325              		.loc 1 259 0
 326 0002 0248     		ldr	r0, .L29
 327 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 328              	.LVL4:
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 263:Core/Src/stm32f4xx_it.c **** }
 329              		.loc 1 263 0
 330 0008 08BD     		pop	{r3, pc}
 331              	.L30:
 332 000a 00BF     		.align	2
ARM GAS  /tmp/ccmuyN4x.s 			page 11


 333              	.L29:
 334 000c 00000000 		.word	hi2c1
 335              		.cfi_endproc
 336              	.LFE778:
 338              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	I2C1_ER_IRQHandler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	I2C1_ER_IRQHandler:
 347              	.LFB779:
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c **** /**
 266:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 267:Core/Src/stm32f4xx_it.c ****   */
 268:Core/Src/stm32f4xx_it.c **** void I2C1_ER_IRQHandler(void)
 269:Core/Src/stm32f4xx_it.c **** {
 348              		.loc 1 269 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c **** 
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 273:Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 357              		.loc 1 273 0
 358 0002 0248     		ldr	r0, .L33
 359 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 360              	.LVL5:
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 277:Core/Src/stm32f4xx_it.c **** }
 361              		.loc 1 277 0
 362 0008 08BD     		pop	{r3, pc}
 363              	.L34:
 364 000a 00BF     		.align	2
 365              	.L33:
 366 000c 00000000 		.word	hi2c1
 367              		.cfi_endproc
 368              	.LFE779:
 370              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	SPI1_IRQHandler
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	SPI1_IRQHandler:
 379              	.LFB780:
ARM GAS  /tmp/ccmuyN4x.s 			page 12


 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c **** /**
 280:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 281:Core/Src/stm32f4xx_it.c ****   */
 282:Core/Src/stm32f4xx_it.c **** void SPI1_IRQHandler(void)
 283:Core/Src/stm32f4xx_it.c **** {
 380              		.loc 1 283 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c **** 
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 287:Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 389              		.loc 1 287 0
 390 0002 0248     		ldr	r0, .L37
 391 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 392              	.LVL6:
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 291:Core/Src/stm32f4xx_it.c **** }
 393              		.loc 1 291 0
 394 0008 08BD     		pop	{r3, pc}
 395              	.L38:
 396 000a 00BF     		.align	2
 397              	.L37:
 398 000c 00000000 		.word	hspi1
 399              		.cfi_endproc
 400              	.LFE780:
 402              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	SPI2_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SPI2_IRQHandler:
 411              	.LFB781:
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c **** /**
 294:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 295:Core/Src/stm32f4xx_it.c ****   */
 296:Core/Src/stm32f4xx_it.c **** void SPI2_IRQHandler(void)
 297:Core/Src/stm32f4xx_it.c **** {
 412              		.loc 1 297 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccmuyN4x.s 			page 13


 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 298:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 299:Core/Src/stm32f4xx_it.c **** 
 300:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 301:Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 421              		.loc 1 301 0
 422 0002 0248     		ldr	r0, .L41
 423 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 424              	.LVL7:
 302:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 303:Core/Src/stm32f4xx_it.c **** 
 304:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 305:Core/Src/stm32f4xx_it.c **** }
 425              		.loc 1 305 0
 426 0008 08BD     		pop	{r3, pc}
 427              	.L42:
 428 000a 00BF     		.align	2
 429              	.L41:
 430 000c 00000000 		.word	hspi2
 431              		.cfi_endproc
 432              	.LFE781:
 434              		.section	.text.USART1_IRQHandler,"ax",%progbits
 435              		.align	1
 436              		.global	USART1_IRQHandler
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	USART1_IRQHandler:
 443              	.LFB782:
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c **** /**
 308:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 309:Core/Src/stm32f4xx_it.c ****   */
 310:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 311:Core/Src/stm32f4xx_it.c **** {
 444              		.loc 1 311 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 312:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 313:Core/Src/stm32f4xx_it.c **** 
 314:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 316:Core/Src/stm32f4xx_it.c **** 
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 318:Core/Src/stm32f4xx_it.c **** }
 449              		.loc 1 318 0
 450 0000 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE782:
 454              		.section	.text.USART2_IRQHandler,"ax",%progbits
 455              		.align	1
 456              		.global	USART2_IRQHandler
 457              		.syntax unified
ARM GAS  /tmp/ccmuyN4x.s 			page 14


 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv4-sp-d16
 462              	USART2_IRQHandler:
 463              	.LFB783:
 319:Core/Src/stm32f4xx_it.c **** 
 320:Core/Src/stm32f4xx_it.c **** /**
 321:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 322:Core/Src/stm32f4xx_it.c ****   */
 323:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 324:Core/Src/stm32f4xx_it.c **** {
 464              		.loc 1 324 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 325:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 326:Core/Src/stm32f4xx_it.c **** 
 327:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 328:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 329:Core/Src/stm32f4xx_it.c **** 
 330:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 331:Core/Src/stm32f4xx_it.c **** }
 469              		.loc 1 331 0
 470 0000 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE783:
 474              		.section	.text.USART3_IRQHandler,"ax",%progbits
 475              		.align	1
 476              		.global	USART3_IRQHandler
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv4-sp-d16
 482              	USART3_IRQHandler:
 483              	.LFB784:
 332:Core/Src/stm32f4xx_it.c **** 
 333:Core/Src/stm32f4xx_it.c **** /**
 334:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 335:Core/Src/stm32f4xx_it.c ****   */
 336:Core/Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 337:Core/Src/stm32f4xx_it.c **** {
 484              		.loc 1 337 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 338:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 339:Core/Src/stm32f4xx_it.c **** 
 340:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 341:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 342:Core/Src/stm32f4xx_it.c **** 
 343:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 344:Core/Src/stm32f4xx_it.c **** }
 489              		.loc 1 344 0
 490 0000 7047     		bx	lr
 491              		.cfi_endproc
ARM GAS  /tmp/ccmuyN4x.s 			page 15


 492              	.LFE784:
 494              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 495              		.align	1
 496              		.global	DMA2_Stream2_IRQHandler
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv4-sp-d16
 502              	DMA2_Stream2_IRQHandler:
 503              	.LFB785:
 345:Core/Src/stm32f4xx_it.c **** 
 346:Core/Src/stm32f4xx_it.c **** /**
 347:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 348:Core/Src/stm32f4xx_it.c ****   */
 349:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 350:Core/Src/stm32f4xx_it.c **** {
 504              		.loc 1 350 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI8:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
 351:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 352:Core/Src/stm32f4xx_it.c **** 
 353:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 354:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 513              		.loc 1 354 0
 514 0002 0248     		ldr	r0, .L48
 515 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 516              	.LVL8:
 355:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 356:Core/Src/stm32f4xx_it.c **** 
 357:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 358:Core/Src/stm32f4xx_it.c **** }
 517              		.loc 1 358 0
 518 0008 08BD     		pop	{r3, pc}
 519              	.L49:
 520 000a 00BF     		.align	2
 521              	.L48:
 522 000c 00000000 		.word	hdma_spi1_rx
 523              		.cfi_endproc
 524              	.LFE785:
 526              		.section	.text.DMA2_Stream5_IRQHandler,"ax",%progbits
 527              		.align	1
 528              		.global	DMA2_Stream5_IRQHandler
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv4-sp-d16
 534              	DMA2_Stream5_IRQHandler:
 535              	.LFB786:
 359:Core/Src/stm32f4xx_it.c **** 
 360:Core/Src/stm32f4xx_it.c **** /**
 361:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream5 global interrupt.
ARM GAS  /tmp/ccmuyN4x.s 			page 16


 362:Core/Src/stm32f4xx_it.c ****   */
 363:Core/Src/stm32f4xx_it.c **** void DMA2_Stream5_IRQHandler(void)
 364:Core/Src/stm32f4xx_it.c **** {
 536              		.loc 1 364 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 08B5     		push	{r3, lr}
 541              	.LCFI9:
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 3, -8
 544              		.cfi_offset 14, -4
 365:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */
 366:Core/Src/stm32f4xx_it.c **** 
 367:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 0 */
 368:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 545              		.loc 1 368 0
 546 0002 0248     		ldr	r0, .L52
 547 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 548              	.LVL9:
 369:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */
 370:Core/Src/stm32f4xx_it.c **** 
 371:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream5_IRQn 1 */
 372:Core/Src/stm32f4xx_it.c **** }
 549              		.loc 1 372 0
 550 0008 08BD     		pop	{r3, pc}
 551              	.L53:
 552 000a 00BF     		.align	2
 553              	.L52:
 554 000c 00000000 		.word	hdma_spi1_tx
 555              		.cfi_endproc
 556              	.LFE786:
 558              		.section	.text.USART6_IRQHandler,"ax",%progbits
 559              		.align	1
 560              		.global	USART6_IRQHandler
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv4-sp-d16
 566              	USART6_IRQHandler:
 567              	.LFB787:
 373:Core/Src/stm32f4xx_it.c **** 
 374:Core/Src/stm32f4xx_it.c **** /**
 375:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART6 global interrupt.
 376:Core/Src/stm32f4xx_it.c ****   */
 377:Core/Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 378:Core/Src/stm32f4xx_it.c **** {
 568              		.loc 1 378 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 379:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 380:Core/Src/stm32f4xx_it.c **** 
 381:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 382:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 1 */
 383:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccmuyN4x.s 			page 17


 384:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 1 */
 385:Core/Src/stm32f4xx_it.c **** }
 573              		.loc 1 385 0
 574 0000 7047     		bx	lr
 575              		.cfi_endproc
 576              	.LFE787:
 578              		.section	.text.UART8_IRQHandler,"ax",%progbits
 579              		.align	1
 580              		.global	UART8_IRQHandler
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu fpv4-sp-d16
 586              	UART8_IRQHandler:
 587              	.LFB788:
 386:Core/Src/stm32f4xx_it.c **** 
 387:Core/Src/stm32f4xx_it.c **** /**
 388:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART8 global interrupt.
 389:Core/Src/stm32f4xx_it.c ****   */
 390:Core/Src/stm32f4xx_it.c **** void UART8_IRQHandler(void)
 391:Core/Src/stm32f4xx_it.c **** {
 588              		.loc 1 391 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 392:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART8_IRQn 0 */
 393:Core/Src/stm32f4xx_it.c **** 
 394:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART8_IRQn 0 */
 395:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART8_IRQn 1 */
 396:Core/Src/stm32f4xx_it.c **** 
 397:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART8_IRQn 1 */
 398:Core/Src/stm32f4xx_it.c **** }
 593              		.loc 1 398 0
 594 0000 7047     		bx	lr
 595              		.cfi_endproc
 596              	.LFE788:
 598              		.section	.text.SPI4_IRQHandler,"ax",%progbits
 599              		.align	1
 600              		.global	SPI4_IRQHandler
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu fpv4-sp-d16
 606              	SPI4_IRQHandler:
 607              	.LFB789:
 399:Core/Src/stm32f4xx_it.c **** 
 400:Core/Src/stm32f4xx_it.c **** /**
 401:Core/Src/stm32f4xx_it.c ****   * @brief This function handles SPI4 global interrupt.
 402:Core/Src/stm32f4xx_it.c ****   */
 403:Core/Src/stm32f4xx_it.c **** void SPI4_IRQHandler(void)
 404:Core/Src/stm32f4xx_it.c **** {
 608              		.loc 1 404 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccmuyN4x.s 			page 18


 613              	.LCFI10:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 3, -8
 616              		.cfi_offset 14, -4
 405:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI4_IRQn 0 */
 406:Core/Src/stm32f4xx_it.c **** 
 407:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI4_IRQn 0 */
 408:Core/Src/stm32f4xx_it.c ****   HAL_SPI_IRQHandler(&hspi4);
 617              		.loc 1 408 0
 618 0002 0248     		ldr	r0, .L58
 619 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 620              	.LVL10:
 409:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI4_IRQn 1 */
 410:Core/Src/stm32f4xx_it.c **** 
 411:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SPI4_IRQn 1 */
 412:Core/Src/stm32f4xx_it.c **** }
 621              		.loc 1 412 0
 622 0008 08BD     		pop	{r3, pc}
 623              	.L59:
 624 000a 00BF     		.align	2
 625              	.L58:
 626 000c 00000000 		.word	hspi4
 627              		.cfi_endproc
 628              	.LFE789:
 630              		.section	.text.UART9_IRQHandler,"ax",%progbits
 631              		.align	1
 632              		.global	UART9_IRQHandler
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	UART9_IRQHandler:
 639              	.LFB790:
 413:Core/Src/stm32f4xx_it.c **** 
 414:Core/Src/stm32f4xx_it.c **** /**
 415:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART9 global interrupt.
 416:Core/Src/stm32f4xx_it.c ****   */
 417:Core/Src/stm32f4xx_it.c **** void UART9_IRQHandler(void)
 418:Core/Src/stm32f4xx_it.c **** {
 640              		.loc 1 418 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 419:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART9_IRQn 0 */
 420:Core/Src/stm32f4xx_it.c **** 
 421:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART9_IRQn 0 */
 422:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART9_IRQn 1 */
 423:Core/Src/stm32f4xx_it.c **** 
 424:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART9_IRQn 1 */
 425:Core/Src/stm32f4xx_it.c **** }
 645              		.loc 1 425 0
 646 0000 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE790:
 650              		.section	.text.UART10_IRQHandler,"ax",%progbits
 651              		.align	1
ARM GAS  /tmp/ccmuyN4x.s 			page 19


 652              		.global	UART10_IRQHandler
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv4-sp-d16
 658              	UART10_IRQHandler:
 659              	.LFB791:
 426:Core/Src/stm32f4xx_it.c **** 
 427:Core/Src/stm32f4xx_it.c **** /**
 428:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART10 global interrupt.
 429:Core/Src/stm32f4xx_it.c ****   */
 430:Core/Src/stm32f4xx_it.c **** void UART10_IRQHandler(void)
 431:Core/Src/stm32f4xx_it.c **** {
 660              		.loc 1 431 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 432:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART10_IRQn 0 */
 433:Core/Src/stm32f4xx_it.c **** 
 434:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART10_IRQn 0 */
 435:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART10_IRQn 1 */
 436:Core/Src/stm32f4xx_it.c **** 
 437:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART10_IRQn 1 */
 438:Core/Src/stm32f4xx_it.c **** }
 665              		.loc 1 438 0
 666 0000 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE791:
 670              		.text
 671              	.Letext0:
 672              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 673              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 674              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 675              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 676              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 677              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 678              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 679              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 680              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 681              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 682              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 683              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 684              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
ARM GAS  /tmp/ccmuyN4x.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccmuyN4x.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccmuyN4x.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccmuyN4x.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccmuyN4x.s:81     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccmuyN4x.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:109    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccmuyN4x.s:123    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:130    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccmuyN4x.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:150    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccmuyN4x.s:163    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccmuyN4x.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccmuyN4x.s:183    .text.DMA1_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:190    .text.DMA1_Stream0_IRQHandler:0000000000000000 DMA1_Stream0_IRQHandler
     /tmp/ccmuyN4x.s:210    .text.DMA1_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:215    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:222    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/ccmuyN4x.s:242    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:247    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:254    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/ccmuyN4x.s:275    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:282    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccmuyN4x.s:302    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:307    .text.I2C1_EV_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:314    .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
     /tmp/ccmuyN4x.s:334    .text.I2C1_EV_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:339    .text.I2C1_ER_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:346    .text.I2C1_ER_IRQHandler:0000000000000000 I2C1_ER_IRQHandler
     /tmp/ccmuyN4x.s:366    .text.I2C1_ER_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:371    .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:378    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/ccmuyN4x.s:398    .text.SPI1_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:403    .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:410    .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/ccmuyN4x.s:430    .text.SPI2_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:435    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:442    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccmuyN4x.s:455    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:462    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccmuyN4x.s:475    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:482    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccmuyN4x.s:495    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:502    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccmuyN4x.s:522    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:527    .text.DMA2_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:534    .text.DMA2_Stream5_IRQHandler:0000000000000000 DMA2_Stream5_IRQHandler
     /tmp/ccmuyN4x.s:554    .text.DMA2_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:559    .text.USART6_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:566    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
     /tmp/ccmuyN4x.s:579    .text.UART8_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:586    .text.UART8_IRQHandler:0000000000000000 UART8_IRQHandler
ARM GAS  /tmp/ccmuyN4x.s 			page 21


     /tmp/ccmuyN4x.s:599    .text.SPI4_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:606    .text.SPI4_IRQHandler:0000000000000000 SPI4_IRQHandler
     /tmp/ccmuyN4x.s:626    .text.SPI4_IRQHandler:000000000000000c $d
     /tmp/ccmuyN4x.s:631    .text.UART9_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:638    .text.UART9_IRQHandler:0000000000000000 UART9_IRQHandler
     /tmp/ccmuyN4x.s:651    .text.UART10_IRQHandler:0000000000000000 $t
     /tmp/ccmuyN4x.s:658    .text.UART10_IRQHandler:0000000000000000 UART10_IRQHandler

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_i2c1_rx
hdma_i2c1_tx
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim2
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_SPI_IRQHandler
hspi1
hspi2
hdma_spi1_rx
hdma_spi1_tx
hspi4
